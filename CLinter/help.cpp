#include <stdio.h>
#include "runtime.h"

void print_help(void) {
    static const char* const H[] = {
        "CLinter BASIC Help",
        "",
        "Program Control",
        "  NEW                 Clear program and variables",
        "  RUN                 Execute program from first line",
        "  LIST [a[-b]]        List program lines (optional range)",
        "  SAVE \"file\"        Save program",
        "  LOAD \"file\"        Load program",
        "  SAVEVARS \"file\"    Save all variables to file",
        "  LOADVARS \"file\"    Load variables from file",
        "  RENUM [start[,step]] Renumber lines (default 10,10)  (command line only)",
        "  QUIT                Exit interpreter",
        "  BYE                 Exit interpreter (command line only)",
        "",
        "Flow Control",
        "  IF <cond> THEN <line> | GOTO <line> | GOSUB <line>",
        "  GOTO <line>         Unconditional jump",
        "  GOSUB <line>        Call subroutine; RETURN to come back",
        "  RETURN              Return from GOSUB",
        "  FOR v = a TO b [STEP s]   Numeric loop",
        "  NEXT v              End of FOR loop",
        "  STOP                Stop program execution",
        "  END                 Terminate program",
        "",
        "Variables & Arrays",
        "  Numeric vars: A, B, X1 ...",
        "  String vars:  A$, NAME$ ...",
        "  DIM A(10), N$(3,4,5)    Up to 10 dimensions; numeric or string arrays",
        "",
        "Math Operators",
        "  +  -  *  /  ^ (right-assoc)",
        "  Comparisons: =  <>  <  >  <=  >=",
        "  Logical: AND  OR  XOR  NOT   (conditions return 0 or 1)",
        "",
        "Math Functions",
        "  ABS(x)   ATN(x)   COS(x)   SIN(x)   TAN(x)",
        "  EXP(x)   LOG(x)   LOG10(x) SQR(x)   POW(x,y)",
        "  INT(x)   SGN(x)   RND(x)   PI (constant)",
        "",
        "String Functions",
        "  LEN(s$)           length of string",
        "  ASC(s$)           code of first character",
        "  VAL(s$)           numeric value of string",
        "  CHR$(n)           character with ASCII code n  (console prints n>=32)",
        "  STR$(x)           number x as string",
        "  SEG$(s$,i[,n])    substring starting at i (1-based), length n",
        "  TRM$(s$)          trim leading and trailing spaces",
        "",
        "Printing",
        "  PRINT expr[,/; expr ...]       ';' or ',' at end suppresses newline",
        "  PRINT #n, ...                  output to file channel",
        "  TAB(n)                         print n spaces (within PRINT)",
        "  String concatenation:          \"A\" + \"B\" => \"AB\"; mixed with numbers allowed",
        "  Control chars (<32) from CHR$  are ignored on console output",
        "",
        "Data",
        "  DATA ...           define constants",
        "  READ var[,var...]  read next DATA items",
        "  RESTORE            reset DATA pointer to start",
        "",
        "File I/O",
        "  OPEN \"file\" FOR INPUT|OUTPUT|APPEND AS #n",
        "  CLOSE #n",
        "  INPUT #n, var      read value",
        "  LINE INPUT #n, s$  read a full line",
        "  PRINT #n, ...      write to file",
        "  EOF(n)             -1 if end-of-file (or invalid), else 0",
        "",
        "Notes",
        "  Arrays: up to 10 dimensions. String arrays end with '$'.",
        "  Exponentiation operator is '^'.",
        "  IF conditions support AND/OR/XOR with proper precedence.",
        nullptr
    };
    for (int i = 0; H[i]; ++i) puts(H[i]);
}
